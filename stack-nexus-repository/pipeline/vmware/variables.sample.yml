#
# Cloud Provider
#

#. vsphere_user (required): ((basic_auth_vsphere.username))
#+ vSphere admin username for Terraform
vsphere_user: ((basic_auth_vsphere.username

#. vsphere_password (required): ((basic_auth_vsphere.password))
#+ vSphere admin password for Terraform
vsphere_password: ((basic_auth_vsphere.password))

#. vsphere_server (required): ""
#+ vSphere server for Terraform
vsphere_server: "212.83.169.2"


#
# Access to newly created instances
#

#. vm_os_user (required): "admin"
#+ The user to use to connect through SSH
vm_os_user: "admin"

#. keypair_public (required): ((custom_keypair.ssh_pub))
#+ The public SSH key to provision to bastion for external access through SSH
keypair_public: ((custom_keypair.ssh_pub))

#. keypair_private (required): ((custom_keypair.ssh_prv))
#+ The private SSH key allowing ansible to run playbooks in the new VM
keypair_private: ((custom_keypair.ssh_prv))


#
# Application Configuration
#

#. nexus_port (required): 8081
#+ Port where Nexus Repository service is exposed
nexus_port: 8081

#. nexus_admin_password (required): "changeme"
#+ Initial admin password for Nexus Repository first installation
nexus_admin_password: "changeme"

#
# Default Stack Repository
#

#. stack_git_repository (required): ($ scs_url $)
#+ Git repository URL containing the stack.
stack_git_repository: ($ scs_url $)

#. stack_git_branch (required): ($ scs_branch $)
#+ Branch to use on the stack Git repository.
stack_git_branch: ($ scs_branch $)

#. stack_git_private_key (required): ((($ scs_cred_path $).ssh_key))
#+ SSH key pair to fetch the stack Git repository.
# stack_git_private_key: ((($ scs_cred_path $).ssh_key))

#. stack_git_username (required): ((($ scs_cred_path $).username))
#+ Username for HTTP(S) auth when pulling/pushing.
# stack_git_username: ((($ scs_cred_path $).username))

#. stack_git_token (required): ((($ scs_cred_path $).password))
#+ Password for HTTP(S) auth when pulling/pushing.
# stack_git_token: ((($ scs_cred_path $).password))

#. stack_terraform_path (required): ($ stack_path $)/terraform/aws
#+ Path of Terraform files in the stack git repository
stack_terraform_path: ($ stack_path $)/terraform/aws

#. stack_ansible_path (required): ($ stack_path $)/ansible
#+ Path of Ansible files in the stack git repository
stack_ansible_path: ($ stack_path $)/ansible

#
# Default Config Repository
#

#. config_git_repository (required): ($ cr_url $)
#+ Git repository URL containing the config of the stack.
config_git_repository: ($ cr_url $)

#. config_git_branch (required): ($ cr_branch $)
#+ Branch to use on the config Git repository.
config_git_branch: ($ cr_branch $)

#. config_git_private_key (required): ((($ cr_cred_path $).ssh_key))
#+ SSH key pair to fetch the config Git repository.
# config_git_private_key: ((($ cr_cred_path $).ssh_key))

#. config_git_username (required): ((($ cr_cred_path $).username))
#+ Username for HTTP(S) auth when pulling/pushing.
config_git_username: ((($ cr_cred_path $).username))

#. config_git_token (required): ((($ cr_cred_path $).password))
#+ Password for HTTP(S) auth when pulling/pushing.
config_git_token: ((($ cr_cred_path $).password))

#. config_terraform_path (required): ($ project $)/terraform/aws/($ environment $)
#+ Path of Terraform files in the config git repository
config_terraform_path: ($ project $)/terraform/aws/($ environment $)

#. config_ansible_path (required): ($ project $)/ansible/environments
#+ Path of Ansible files in the config git repository
config_ansible_path: ($ project $)/ansible/environments


#
# Default variables that shouldn't be changed except if needed
#

#. env (required): ($ environment $)
#+ Name of the project's environment.
env: ($ environment $)

#. project (required): ($ project $)
#+ Name of the project.
project: ($ project $)

#. customer (required): ($ organization_canonical $)
#+ Name of the Cycloid Organization, used as customer variable name.
customer: ($ organization_canonical $)

#. cycloid_api_url (required): ($ api_url $)
#+ Cycloid API URL.
cycloid_api_url: ($ api_url $)

#. terraform_version (required): '1.5.7'
#+ terraform version used to execute your code.
terraform_version: '1.5.7'

#. cycloid-toolkit ansible version (required): 'v8.3'
#+ cycloid-toolkit docker image tag to use (https://hub.docker.com/r/cycloid/cycloid-toolkit/tags).
ansible_version: 'v8.3'
